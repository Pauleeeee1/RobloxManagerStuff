local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local UserName = Player.Name

local folderPath = "/" .. getgenv().Config.folder_name
local fileName = getgenv().Config.config_name .. ".json"
local filePath = folderPath .. "/" .. fileName

local function createFolder(path)
	local success, err = pcall(makefolder, path)
	if not success then
		warn("Failed to create folder at '" .. path .. "': " .. tostring(err))
	end
end

local function createFile(path, content)
	local success, err = pcall(writefile, path, content)
	if not success then
		warn("Failed to create file at '" .. path .. "': " .. tostring(err))
	end
end


local function generateUserFileName(prefix, suffix, username)
	if not prefix then prefix = "" end
	if not suffix then suffix = "" end
	if not username then username = "UnknownUser" end
	return prefix .. username .. suffix .. ".json"
end


local function checkAndCreateFile(path, content)
	if not isfile(path) then
		createFile(path, content)
	end
end

local function handleFileCreation()
	local configString = game.HttpService:JSONEncode(getgenv().Config.content) 

	if getgenv().Config.is_script_user_only then
		local userPrefix = getgenv().Config.config_for_user_only[1]
		local userSuffix = getgenv().Config.config_for_user_only[2]
		local userFileName = generateUserFileName(userPrefix, userSuffix, UserName)
		local userFilePath = getgenv().Config.is_in_folder and (folderPath .. "/" .. userFileName) or ("/" .. userFileName)

		checkAndCreateFile(userFilePath, configString)
	else
		local path = getgenv().Config.is_in_folder and filePath or ("/" .. fileName)
		checkAndCreateFile(path, configString)
	end
end

if getgenv().Config.is_in_folder then
	if not isfolder(folderPath) then
		createFolder(folderPath)
	end
end
handleFileCreation()
