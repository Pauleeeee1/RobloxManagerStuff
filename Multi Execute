local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserID = LocalPlayer.UserId

local function debugPrint(...)
	if DebugPrintEnabled then
		print("Debug:", ...)
	end
end

local function isUserInAccounts(userId)
	for _, account in ipairs(Config.Accounts) do
		if account.ID == userId then
			local scriptKey = "Script " .. account.script
			if Config.Scripts[scriptKey] then
				return true
			else
				debugPrint("Script URL not found for script ID:", account.script)
				return false
			end
		end
	end
	return false
end

local function getUserScripts(userId)
	local userScripts = {}
	for _, account in ipairs(Config.Accounts) do
		if account.ID == userId then
			local scriptKey = "Script " .. account.script
			local scriptUrl = Config.Scripts[scriptKey]
			if scriptUrl then
				table.insert(userScripts, scriptUrl)
			else
				debugPrint("Script URL not found for key:", scriptKey)
			end
		end
	end
	return userScripts
end

local function executeScript(scriptUrl)
	local success, result = pcall(function()
		loadstring(game:HttpGet(scriptUrl))()
	end)
	if not success then
		debugPrint("Failed to execute script:", result)
	end
end

local function main()
	if isUserInAccounts(UserID) then
		local userScripts = getUserScripts(UserID)
		if #userScripts > 0 then
			for _, scriptUrl in ipairs(userScripts) do
				debugPrint("Executing script URL:", scriptUrl)
				executeScript(scriptUrl)
			end
		else
			debugPrint("No scripts found for this user.")
		end
	else
		debugPrint("User not in accounts list.")
	end

	-- Example of using getScripts function
	for scriptName, scriptUrl in pairs(Config.Scripts) do
		debugPrint("Available Script:", scriptName, "URL:", scriptUrl)
	end
end

main()
